code = { ((statement) | CRLF)* }

statement      = { (instr | assignment) ~ ";" }
instr_name     = { word }
instr          = { instr_name ~ "(" ~ parameter_list ~ ")" }
parameter_list = { (parameter ~ ("," ~ " "+ ~ parameter)*)? }
parameter      = { expression }
expression     = { instr | primitive | operation | variable }

assignment =  { variable ~ " "* ~ equals ~ " "* ~ expression }
equals     = _{ "=" }
variable   =  { alpha+ }

primitive = { string | number }

string = { "\"" ~ char* ~ "\"" }
number = { digit+ }

operation = { sum }
sum       = { product ~ ((add | sub) ~ product)* }
product   = { value ~ ((mul | div) ~ value)* }

value = { (instr | primitive | variable) | ("(" ~ operation ~ ")") }

add = { "+" }
sub = { "-" }
mul = { "*" }
div = { "/" }

word  =  { char+ }
char  = _{ digit | alpha }
alpha =  { 'a'..'z' | 'A'..'Z' }
digit = _{ '0'..'9' }
CRLF  = _{ "\r"? ~ "\n" | "\r" | "\n" }